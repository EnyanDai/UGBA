nohup: ignoring input
Namespace(cuda=True, dataset='Flickr', debug=True, defense_mode='none', device_id=3, dis_weight=0.0, dropout=0.5, epochs=200, evaluate_mode='overall', hidden=64, homo_boost_thrd=0.5, homo_loss_weight=1.0, inner=1, lr=0.01, model='GCN', no_cuda=False, prune_thr=0.15, seed=11, selection_method='cluster_degree', target_class=0, target_loss_weight=1, test_model='GCN', thrd=0.5, train_lr=0.02, trigger_size=3, trojan_epochs=200, use_vs_number=True, vs_number=20, vs_ratio=0, weight_decay=0.0005)
Length of training set: 17850
Training benign model Finished!
Total time elapsed: 10.7656s
Benign CA: 0.4543
#Attach Nodes:20
Length of training set: 17850
=== training gcn model ===
Epoch 0, training loss: 1.980782389640808
acc_val: 0.2613
Epoch 10, training loss: 1.625368356704712
acc_val: 0.4119
Epoch 20, training loss: 1.5911859273910522
acc_val: 0.4119
Epoch 30, training loss: 1.5817729234695435
acc_val: 0.4119
Epoch 40, training loss: 1.5776357650756836
acc_val: 0.4124
Epoch 50, training loss: 1.5716015100479126
acc_val: 0.4165
Epoch 60, training loss: 1.5620604753494263
acc_val: 0.4182
Epoch 70, training loss: 1.5458619594573975
acc_val: 0.4496
Epoch 80, training loss: 1.524308681488037
acc_val: 0.4594
Epoch 90, training loss: 1.5200589895248413
acc_val: 0.4727
Epoch 100, training loss: 1.5112488269805908
acc_val: 0.4821
Epoch 110, training loss: 1.508617877960205
acc_val: 0.4743
Epoch 120, training loss: 1.5026355981826782
acc_val: 0.4810
Epoch 130, training loss: 1.5142046213150024
acc_val: 0.4765
Epoch 140, training loss: 1.5044276714324951
acc_val: 0.4803
Epoch 150, training loss: 1.509097695350647
acc_val: 0.4846
Epoch 160, training loss: 1.4997109174728394
acc_val: 0.4897
Epoch 170, training loss: 1.4960877895355225
acc_val: 0.4843
Epoch 180, training loss: 1.4930763244628906
acc_val: 0.4904
Epoch 190, training loss: 1.4929908514022827
acc_val: 0.4923
=== picking the best model according to the performance on validation ===
Training encoder Finished!
Total time elapsed: 7.9571s
Encoder CA on clean test nodes: 0.4957
idx_sing_class []
idx_sing_class []
idx_sing_class []
idx_sing_class [    2     3     5 ... 89226 89246 89247]
each_class_size 3
y_pred [0 0 0 ... 0 0 0]
node_idxs [32769     2 65544 ... 65528 32761 32766]
selected_nodes [14994 20564 28592 ... 26590 14627  1801] [14994 20564 28592 ... 26590 14627  1801]
idx_sing_class []
idx_sing_class [    0     1     4 ... 89245 89248 89249]
each_class_size 3
y_pred [1 0 1 ... 0 1 1]
node_idxs [    0     4    10 ... 89243 89248 89249]
selected_nodes [80653 69595 63751 ...    53   184   171] [80653 69595 63751 ...    53   184   171]
idx_attach: tensor([14994, 20564, 28592,  ...,    53,   184,   171], device='cuda:3')
Traceback (most recent call last):
  File "run_adaptive.py", line 189, in <module>
    model.fit(data.x, train_edge_index, None, data.y, idx_train,idx_attach, unlabeled_idx)
  File "/home/mfl5681/project-backdoor/Backdoor/models/backdoor.py", line 222, in fit
    idx_outter = torch.cat([idx_attach,idx_unlabeled[rs.choice(len(idx_unlabeled),size=512,replace=False)]])
  File "mtrand.pyx", line 909, in numpy.random.mtrand.RandomState.choice
ValueError: a must be greater than 0 unless no samples are taken
