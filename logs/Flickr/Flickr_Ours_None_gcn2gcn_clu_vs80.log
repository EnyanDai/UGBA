nohup: ignoring input
Namespace(cuda=True, dataset='Flickr', debug=True, defense_mode='none', device_id=2, dis_weight=0.0, dropout=0.5, epochs=200, evaluate_mode='overall', hidden=64, homo_boost_thrd=0.5, homo_loss_weight=1.0, inner=1, lr=0.01, model='GCN', no_cuda=False, prune_thr=0.15, seed=11, selection_method='cluster_degree', target_class=0, target_loss_weight=1, test_model='GCN', thrd=0.5, train_lr=0.02, trigger_size=3, trojan_epochs=200, use_vs_number=True, vs_number=80, vs_ratio=0, weight_decay=0.0005)
Length of training set: 17850
Training benign model Finished!
Total time elapsed: 10.0934s
Benign CA: 0.4525
#Attach Nodes:80
Length of training set: 17850
=== training gcn model ===
Epoch 0, training loss: 1.980782389640808
acc_val: 0.2613
Epoch 10, training loss: 1.625368356704712
acc_val: 0.4119
Epoch 20, training loss: 1.5911859273910522
acc_val: 0.4119
Epoch 30, training loss: 1.581773042678833
acc_val: 0.4119
Epoch 40, training loss: 1.5776357650756836
acc_val: 0.4124
Epoch 50, training loss: 1.5716015100479126
acc_val: 0.4165
Epoch 60, training loss: 1.5620604753494263
acc_val: 0.4182
Epoch 70, training loss: 1.545862078666687
acc_val: 0.4497
Epoch 80, training loss: 1.5242968797683716
acc_val: 0.4594
Epoch 90, training loss: 1.5200475454330444
acc_val: 0.4732
Epoch 100, training loss: 1.5114307403564453
acc_val: 0.4821
Epoch 110, training loss: 1.508816123008728
acc_val: 0.4744
Epoch 120, training loss: 1.5028109550476074
acc_val: 0.4796
Epoch 130, training loss: 1.5107439756393433
acc_val: 0.4872
Epoch 140, training loss: 1.5010229349136353
acc_val: 0.4799
Epoch 150, training loss: 1.5047731399536133
acc_val: 0.4880
Epoch 160, training loss: 1.4986419677734375
acc_val: 0.4883
Epoch 170, training loss: 1.497843861579895
acc_val: 0.4852
Epoch 180, training loss: 1.4931753873825073
acc_val: 0.4925
Epoch 190, training loss: 1.4950112104415894
acc_val: 0.4943
=== picking the best model according to the performance on validation ===
Training encoder Finished!
Total time elapsed: 11.7705s
Encoder CA on clean test nodes: 0.4951
idx_sing_class []
idx_sing_class []
idx_sing_class []
idx_sing_class [    2     3     5 ... 89226 89246 89247]
each_class_size 13
y_pred [0 0 0 ... 0 0 0]
node_idxs [32769     2 65544 ... 65528 32761 32766]
selected_nodes [16831 47421 19434 ...   163 11270    50] [16831 47421 19434 ...   163 11270    50]
idx_sing_class []
idx_sing_class [    0     1     4 ... 89245 89248 89249]
each_class_size 13
y_pred [1 0 1 ... 0 1 1]
node_idxs [    0     4    10 ... 89243 89248 89249]
selected_nodes [85311 78629 24154 ...    53   184   171] [85311 78629 24154 ...    53   184   171]
idx_attach: tensor([16831, 47421, 19434,  ...,    53,   184,   171], device='cuda:2')
Traceback (most recent call last):
  File "run_adaptive.py", line 189, in <module>
    model.fit(data.x, train_edge_index, None, data.y, idx_train,idx_attach, unlabeled_idx)
  File "/home/mfl5681/project-backdoor/Backdoor/models/backdoor.py", line 222, in fit
    idx_outter = torch.cat([idx_attach,idx_unlabeled[rs.choice(len(idx_unlabeled),size=512,replace=False)]])
  File "mtrand.pyx", line 909, in numpy.random.mtrand.RandomState.choice
ValueError: a must be greater than 0 unless no samples are taken
